app :  (term -> (term -> term))
abs :  ((term -> term) -> term)
sub :  ((term -> term) -> (term -> term))

app (abs (/\y. X[y])) Y => sub (/\y. X[y]) Y
sub (/\y. X0) Y => X0
sub (/\y. y) Y => Y
sub (/\y. abs (/\x. X2[x, y])) Y => abs (/\x. sub (/\y. X2[x, y]) Y)
sub (/\y. app (X[y]) (Xprime[y])) Y => app (sub (/\y. X[y]) Y) (sub (/\y. Xprime[y]) Y)
