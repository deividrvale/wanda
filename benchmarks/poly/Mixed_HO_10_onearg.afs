zero : nat
s : (nat) --> nat
err : nat
pred : (nat) --> nat
id : nat -> nat
add : (nat) --> nat -> nat
nul : nat -> bool
eq : (nat) --> nat -> bool
true : bool
false : bool

X : nat
Y : nat

nul * zero => true
nul * s(X) => false
nul * err => false
pred(zero) => err
pred(s(X)) => X
id * X => X
eq(zero) => nul
eq(s(X)) => /\z:nat.eq(X) * pred(z)
add(zero) => id
add(s(X)) => /\z:nat.add(X) * s(z)

