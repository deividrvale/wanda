YES
  Signature: [

    cons : [a * b] --> b ; 
    map : [a -> a * b] --> b ; 
    nil : [] --> b 

  ]

  Rules: [

    map(f, nil) => nil ; 
    map(f, cons(x, y)) => cons(f x, map(f, y)) 

  ]

(** This AFS is converted to an AFSM simply by replacINg all free variables by meta-variables (with arity 0). **) 

 

  Interpretation: [

    J(cons) = Lam[y0;y1].3 + 2*y1 ; 
    J(map) = Lam[G0;y1].3*y1 + 3*y1*G0(y1) ; 
    J(nil) = 3 

  ]

(**

  [[map(_F0, nil)]] = 12 + F0(0) + 9*F0(3) > 3 = [[nil]] 
  [[map(_F0, cons(_x1, _x2))]] = 12 + 4*x1 + 12*x2 + F0(0) + 3*x1*F0(3 + x1 + 3*x2) + 9*x2*F0(3 + x1 + 3*x2) + 9*F0(3 + x1 + 3*x2) > 3 + x1 + 12*x2 + F0(x1) + 3*F0(0) + 9*x2*F0(x2) = [[cons(_F0 _x1, map(_F0, _x2))]] 

**)

Removed: [

  map(F, nil) => nil ; 
  map(F, cons(X, Y)) => cons(F X, map(F, Y)) 

]

